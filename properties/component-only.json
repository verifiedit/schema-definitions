{
  "$id": "https://github.com/verifiedit/schema-definitions/main/component-only",
  "$schema": "https://json-schema.org/schema",
  "type": "object",
  "properties": {
    "async": {
      "description": "Indicates the synchronicity of the component, true for async, false for sync",
      "type": "boolean"
    },
    "component": {
      "description": "Component name",
      "type": [
        "object",
        "string"
      ],
      "oneOf": [
        {
          "enum": [
            "ChoiceInput",
            "FormPassed",
            "HiddenInput",
            "MultiChoiceInput",
            "NumberInput",
            "PhotoInput",
            "SignatureInput",
            "StaticAccordion",
            "StaticAlertBanner",
            "StaticHeading",
            "StaticFileLink",
            "StaticMarkdown",
            "StaticText",
            "StaticImageViewer",
            "StaticPDFViewer",
            "StaticVideoViewer",
            "TextInput"
          ]
        }
      ]
    },
    "conditions": {
      "description": "Define conditions which affect this component",
      "$ref": "https://raw.githubusercontent.com/verifiedit/schema-definitions/main/properties/conditions.json"
    },
    "content": {
      "description": "Displays instructions to the user as a question or item label",
      "type": "string"
    },
    "controlPosition": {
      "description": "Show control button(s) at the top or on the bottom of the component",
      "$ref": "https://raw.githubusercontent.com/verifiedit/schema-definitions/main/properties/control-position.json"
    },
    "default": {
      "description": "Default value of this component",
      "$ref": "https://raw.githubusercontent.com/verifiedit/schema-definitions/main/properties/default.json"
    },
    "hidden": {
      "description": "Provide a hidden form value to be returned with the other form data",
      "type": "object"
    },
    "identifier": {
      "description": "Component identifier, can contain alphanumeric characters, _ and - but must start with an alpha character or _, and be unique within the schema",
      "$ref": "https://raw.githubusercontent.com/verifiedit/schema-definitions/main/properties/identifier.json"
    },
    "max": {
      "description": "Maximum length of value allowed",
      "type": "number"
    },
    "min": {
      "description": "Minimum length of value allowed",
      "type": "number",
      "minimum": 0
    },
    "options": {
      "description": "List of selectable items",
      "$ref": "https://raw.githubusercontent.com/verifiedit/schema-definitions/main/properties/options.json"
    },
    "parent": {
      "description": "Reference to the parent component, used to group multiple components",
      "type": "string"
    },
    "placeholder": {
      "description": "Placeholder label",
      "type": "string"
    },
    "question": {
      "description": "The components question",
      "type": "string"
    },
    "readonly": {
      "description": "Make the component readonly",
      "$ref": "https://raw.githubusercontent.com/verifiedit/schema-definitions/main/properties/readonly.json"
    },
    "resource": {
      "description": "A resource identifier such as a URL, filename, or callback to retrieve the associated resource",
      "type": "string"
    },
    "rules": {
      "description": "Validation rules to apply to the component value, required to be valid javascript expressions written as a string",
      "$ref": "https://raw.githubusercontent.com/verifiedit/schema-definitions/main/properties/rules.json"
    },
    "show": {
      "description": "Determines if the component will be visible or not",
      "$ref": "https://raw.githubusercontent.com/verifiedit/schema-definitions/main/properties/show.json"
    },
    "showChildren": {
      "description": "Whether to show or hide children components",
      "type": "boolean"
    },
    "specialOption": {
      "description": "Determines if the option selected should remove all other options previously selected",
      "type": "string"
    },
    "type": {
      "description": "The type of data the component should expect",
      "$ref": "https://raw.githubusercontent.com/verifiedit/schema-definitions/main/properties/type.json"
    }
  },
  "anyOf": [
    {
      "if": {
        "properties": {
          "component": {
            "const": "StaticAlertBanner"
          }
        }
      },
      "then": {
        "properties": {
          "componentStyle": {
            "enum": [
              "danger",
              "information",
              "success",
              "warning"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "component": {
            "const": "ChoiceInput"
          }
        }
      },
      "then": {
        "properties": {
          "componentStyle": {
            "enum": [
              "button",
              "checkbox",
              "radio"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "component": {
            "const": "TextInput"
          }
        }
      },
      "then": {
        "properties": {
          "componentStyle": {
            "enum": [
              "multiple-lines",
              "single-line"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "async": {
            "const": true
          }
        }
      },
      "then": {
        "required": [
          "hidden"
        ]
      }
    }
  ],
  "if": {
    "properties": {
      "component": {
        "const": "TextInput"
      }
    }
  },
  "then": {
    "required": [
      "component",
      "identifier",
      "placeholder",
      "readonly",
      "show"
    ]
  },
  "else": {
    "if": {
      "properties": {
        "component": {
          "const": "MultiChoiceInput"
        }
      }
    },
    "then": {
      "required": [
        "component",
        "identifier",
        "content",
        "options",
        "readonly",
        "show"
      ]
    },
    "else": {
      "if": {
        "properties": {
          "component": {
            "const": "ChoiceInput"
          }
        }
      },
      "then": {
        "required": [
          "component",
          "identifier",
          "content",
          "options",
          "readonly",
          "show",
          "componentStyle"
        ]
      },
      "else": {
        "if": {
          "properties": {
            "component": {
              "const": "PhotoInput"
            }
          }
        },
        "then": {
          "required": [
            "component",
            "identifier",
            "content",
            "min",
            "max",
            "controlPosition",
            "show"
          ]
        },
        "else": {
          "if": {
            "properties": {
              "component": {
                "const": "StaticAccordion"
              }
            }
          },
          "then": {
            "required": [
              "component",
              "content",
              "identifier",
              "show",
              "componentStyle"
            ]
          },
          "else": {
            "if": {
              "properties": {
                "component": {
                  "const": "StaticFileLink"
                }
              }
            },
            "then": {
              "required": [
                "component",
                "identifier",
                "show",
                "resource"
              ]
            },
            "else": {
              "if": {
                "properties": {
                  "component": {
                    "const": "StaticImageViewer"
                  }
                }
              },
              "then": {
                "required": [
                  "component",
                  "identifier",
                  "show",
                  "resource"
                ]
              },
              "else": {
                "if": {
                  "properties": {
                    "component": {
                      "const": "StaticPDFViewer"
                    }
                  }
                },
                "then": {
                  "required": [
                    "component",
                    "identifier",
                    "show",
                    "resource"
                  ]
                },
                "else": {
                  "if": {
                    "properties": {
                      "component": {
                        "const": "StaticVideoViewer"
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "component",
                      "identifier",
                      "show",
                      "resource"
                    ]
                  },
                  "else": {
                    "if": {
                      "properties": {
                        "component": {
                          "const": "StaticText"
                        }
                      }
                    },
                    "then": {
                      "required": [
                        "component",
                        "content",
                        "identifier",
                        "show"
                      ]
                    },
                    "else": {
                      "if": {
                        "properties": {
                          "component": {
                            "const": "NumberInput"
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "component",
                          "content",
                          "identifier",
                          "show"
                        ]
                      },
                      "else": {
                        "if": {
                          "properties": {
                            "component": {
                              "const": "SignatureInput"
                            }
                          }
                        },
                        "then": {
                          "required": [
                            "component",
                            "identifier",
                            "controlPosition",
                            "show"
                          ]
                        },
                        "else": {
                          "if": {
                            "properties": {
                              "component": {
                                "const": "StaticMarkdown"
                              }
                            }
                          },
                          "then": {
                            "required": [
                              "component",
                              "content",
                              "identifier",
                              "show"
                            ]
                          },
                          "else": {
                            "if": {
                              "properties": {
                                "component": {
                                  "const": "FormPassed"
                                }
                              }
                            },
                            "then": {
                              "required": [
                                "conditions",
                                "component",
                                "identifier"
                              ]
                            },
                            "else": {
                              "if": {
                                "properties": {
                                  "component": {
                                    "const": "HiddenInput"
                                  }
                                }
                              },
                              "then": {
                                "required": [
                                  "component",
                                  "default",
                                  "identifier"
                                ]
                              },
                              "else": {
                                "required": [
                                  "component",
                                  "identifier",
                                  "controlPosition",
                                  "show"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
